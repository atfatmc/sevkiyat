{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATIF ATMACA\\\\Desktop\\\\Sevkiyat\\\\Sevkiyat_Frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\n// Axios instance with default config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add token to all requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setUser(null);\n  }, []);\n  const fetchUserData = useCallback(async () => {\n    try {\n      const response = await api.get('/users/me');\n      if (response.data) {\n        setUser(response.data);\n      } else {\n        throw new Error('No user data received');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      handleLogout();\n    }\n  }, [handleLogout]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      fetchUserData();\n    }\n  }, [fetchUserData]);\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      if (token) {\n        localStorage.setItem('token', token);\n        setIsAuthenticated(true);\n        await fetchUserData();\n      } else {\n        throw new Error('No token received');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      handleLogout();\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      handleLogout();\n    }\n  };\n  const register = async userData => {\n    try {\n      await api.post('/auth/register', userData);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const updateUser = async (id, userData) => {\n    try {\n      const response = await api.put(`/users/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Update user error:', error);\n      throw error;\n    }\n  };\n  const deleteUser = async id => {\n    try {\n      await api.delete(`/users/${id}`);\n    } catch (error) {\n      console.error('Delete user error:', error);\n      throw error;\n    }\n  };\n  const getAllUsers = async () => {\n    try {\n      const response = await api.get('/users');\n      return response.data;\n    } catch (error) {\n      console.error('Get all users error:', error);\n      throw error;\n    }\n  };\n  const getUserById = async id => {\n    try {\n      const response = await api.get(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Get user by id error:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      register,\n      updateUser,\n      deleteUser,\n      getAllUsers,\n      getUserById\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"CuiZJixKvhiMytyembvwuKhj0jo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","handleLogout","fetchUserData","get","data","Error","console","login","username","password","post","setItem","logout","register","userData","updateUser","id","put","deleteUser","delete","getAllUsers","getUserById","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ATIF ATMACA/Desktop/Sevkiyat/Sevkiyat_Frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8080/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add token to all requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface User {\r\n  id?: number;\r\n  name: string;\r\n  email: string;\r\n  company?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (user: User) => Promise<void>;\r\n  updateUser: (id: number, user: User) => Promise<void>;\r\n  deleteUser: (id: number) => Promise<void>;\r\n  getAllUsers: () => Promise<User[]>;\r\n  getUserById: (id: number) => Promise<User>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    localStorage.removeItem('token');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  }, []);\r\n\r\n  const fetchUserData = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/users/me');\r\n      if (response.data) {\r\n        setUser(response.data);\r\n      } else {\r\n        throw new Error('No user data received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      handleLogout();\r\n    }\r\n  }, [handleLogout]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      fetchUserData();\r\n    }\r\n  }, [fetchUserData]);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/login', {\r\n        username,\r\n        password,\r\n      });\r\n      \r\n      const { token } = response.data;\r\n      if (token) {\r\n        localStorage.setItem('token', token);\r\n        setIsAuthenticated(true);\r\n        await fetchUserData();\r\n      } else {\r\n        throw new Error('No token received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      handleLogout();\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      handleLogout();\r\n    }\r\n  };\r\n\r\n  const register = async (userData: User) => {\r\n    try {\r\n      await api.post('/auth/register', userData);\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateUser = async (id: number, userData: User) => {\r\n    try {\r\n      const response = await api.put(`/users/${id}`, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Update user error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (id: number) => {\r\n    try {\r\n      await api.delete(`/users/${id}`);\r\n    } catch (error) {\r\n      console.error('Delete user error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getAllUsers = async () => {\r\n    try {\r\n      const response = await api.get('/users');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get all users error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getUserById = async (id: number) => {\r\n    try {\r\n      const response = await api.get(`/users/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Get user by id error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        isAuthenticated, \r\n        user, \r\n        login, \r\n        logout, \r\n        register,\r\n        updateUser,\r\n        deleteUser,\r\n        getAllUsers,\r\n        getUserById\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}