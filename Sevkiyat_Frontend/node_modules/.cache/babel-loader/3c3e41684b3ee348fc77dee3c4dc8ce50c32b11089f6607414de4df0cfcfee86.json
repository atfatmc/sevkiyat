{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATIF ATMACA\\\\Desktop\\\\Sevkiyat\\\\Sevkiyat_Frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      // You can also fetch user data here if needed\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n      // You can also fetch and set user data here\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const register = async (email, password, name) => {\n    try {\n      await axios.post('http://localhost:8080/api/auth/register', {\n        email,\n        password,\n        name\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","token","localStorage","getItem","login","email","password","response","post","data","setItem","error","logout","removeItem","register","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ATIF ATMACA/Desktop/Sevkiyat/Sevkiyat_Frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: any;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (email: string, password: string, name: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      // You can also fetch user data here if needed\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      const { token } = response.data;\r\n      localStorage.setItem('token', token);\r\n      setIsAuthenticated(true);\r\n      // You can also fetch and set user data here\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const register = async (email: string, password: string, name: string) => {\r\n    try {\r\n      await axios.post('http://localhost:8080/api/auth/register', {\r\n        email,\r\n        password,\r\n        name,\r\n      });\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTH,kBAAkB,CAAC,IAAI,CAAC;MACxB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,sCAAsC,EAAE;QACxEH,KAAK;QACLC;MACF,CAAC,CAAC;MACF,MAAM;QAAEL;MAAM,CAAC,GAAGM,QAAQ,CAACE,IAAI;MAC/BP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;MACpCH,kBAAkB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCf,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAAA,CAAOT,KAAa,EAAEC,QAAgB,EAAES,IAAY,KAAK;IACxE,IAAI;MACF,MAAM1B,KAAK,CAACmB,IAAI,CAAC,yCAAyC,EAAE;QAC1DH,KAAK;QACLC,QAAQ;QACRS;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,eAAe;MAAEE,IAAI;MAAEK,KAAK;MAAEQ,MAAM;MAAEE;IAAS,CAAE;IAAAnB,QAAA,EAC7EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAlDWF,YAAqD;AAAA4B,EAAA,GAArD5B,YAAqD;AAoDlE,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAIiC,OAAO,KAAKhC,SAAS,EAAE;IACzB,MAAM,IAAIiC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}